<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="scorecard">

  <resultMap id="InteractionExtraDataTOResultMap"
             class="cz.zoom.scorecard.business.bo.interaction.InteractionExtraDataTO">
    <result column="couplesid" jdbcType="VARCHAR" property="coupleSid"/>
    <result column="sub_eval_total" jdbcType="REAL" property="score"/>
    <result column="scoring_system" jdbcType="OTHER" property="scoringSystem"/>
  </resultMap>

  <resultMap id="phrasesResultMap" class="cz.zoom.callrec.core.callstorage.pojo.speech.SpeechPhraseBO">
      <result column="phraseid" property="phraseid" jdbcType="INTEGER"/>
      <result column="phrase_text" property="phraseText" jdbcType="VARCHAR"/>
      <result column="confidence" property="confidence" jdbcType="DOUBLE"/>
      <result column="interaction_count" property="interactionCount" jdbcType="INTEGER"/>
      <result column="last_count_date" property="lastCountDate" jdbcType="TIMESTAMP"/>
      <result column="speech_phrases_state" property="state" jdbcType="VARCHAR"/>
      <result column="enabled" property="enabled" jdbcType="BIT"/>
  </resultMap>

  <resultMap id="tagsResultMap" class="cz.zoom.callrec.core.callstorage.pojo.speech.SpeechTagBO">
    <result column="tagid" property="tagid" jdbcType="INTEGER"/>
    <result column="tag_name" property="tagName" jdbcType="VARCHAR"/>
    <result column="state" property="state" jdbcType="Text"/>
    <result column="searchid" property="searchid" jdbcType="INTEGER"/>
    <result column="icon" property="tagIcon" jdbcType="VARCHAR"/>
  </resultMap>

  <resultMap id="speechPhrasesMap" class="cz.zoom.callrec.core.callstorage.pojo.speech.SpeechPhraseBO" groupBy="phraseid"
             extends="scorecard.phrasesResultMap">
    <result column="tagid" property="speechTags" resultMap="scorecard.tagsResultMap"/>
  </resultMap>

  <resultMap id="voiceTagsBaseMap" class="cz.zoom.callrec.core.callstorage.pojo.speech.VoiceTagBO">
    <result column="voice_tagid" property="voicetagid"/>
    <result column="confidence" property="confidence"/>
    <result column="from_time" property="fromtime"/>
    <result column="to_time" property="totime"/>
    <result column="channel" property="channel"/>
    <result column="phraseid" property="phraseId"/>
  </resultMap>

  <resultMap id="voiceTagsMap" class="cz.zoom.callrec.core.callstorage.pojo.speech.VoiceTagBO" groupBy="voicetagid"
             extends="scorecard.voiceTagsBaseMap">
    <result column="phraseid" property="phrase" resultMap="scorecard.speechPhrasesMap"/>
  </resultMap>


  <resultMap id="mediaFileBaseMap" class="cz.zoom.scorecard.business.bo.interaction.MediaFileBO" groupBy="mediaFileId">
    <result column="cfile_id" property="mediaFileId"/>
  </resultMap>

  <resultMap id="mediaFileWithVoiceBaseMap" class="cz.zoom.scorecard.business.bo.interaction.MediaFileBO"
             groupBy="mediaFileId" extends="mediaFileBaseMap">
    <result column="voice_tagid" property="voicetags" resultMap="scorecard.voiceTagsBaseMap"/>
  </resultMap>

  <resultMap id="mediaFileMap" class="cz.zoom.scorecard.business.bo.interaction.MediaFileBO" groupBy="mediaFileId"
             extends="mediaFileBaseMap">
    <result column="cfile_cpath" property="path"/>
    <result column="cfile_cftype" property="type"/>
    <result column="cfile_cktype" property="checksumType"/>
    <result column="cfile_ckvalue" property="checksum"/>
    <result column="cfile_digest" property="digest"/>
    <result column="cfile_enc_key" property="encryptionKeyId"/>
    <result column="voice_tagid" property="voicetags" resultMap="scorecard.voiceTagsMap"/>
  </resultMap>

  <resultMap class="cz.zoom.scorecard.business.bo.interaction.InteractionBO" groupBy="id" id="interactionsBaseMap">
    <result column="couple_id" property="id"/>
    <result column="couple_length" property="length"/>
    <result column="couple_sid" property="coupleSid"/>
    <result column="couple_start" property="startDate"/>
    <result column="couple_stop" property="stopDate"/>
    <result column="couple_direction" property="direction" jdbcType="java.lang.String"/>
    <result column="couple_cftypes" property="cftypes"/>
    <result column="callingagent" property="callingAgent"/>
    <result column="calledagent" property="calledAgent"/>
    <result column="originalcallednr" property="calledNumber"/>
    <result column="evaluation_id" property="evaluationId"/>
    <result column="callingnr" property="callingNumber"/>
    <result column="subeval_score" property="score"/>
    <result column="quest_sc_system" property="scoringSystem"/>
  </resultMap>

  <resultMap class="cz.zoom.scorecard.business.bo.interaction.InteractionBO" groupBy="id" id="interactionsMap"
             extends="interactionsBaseMap">
    <result column="cfile_id" property="mediaFiles" resultMap="scorecard.mediaFileMap"/>
  </resultMap>

  <resultMap class="cz.zoom.scorecard.business.bo.interaction.InteractionBO" groupBy="id" id="interactionsLimitedMap"
             extends="interactionsBaseMap">
    <result column="cfile_id" property="mediaFiles" resultMap="scorecard.mediaFileWithVoiceBaseMap"/>
  </resultMap>

  <resultMap id="intervalResultMap" class="java.util.HashMap">
    <result property="start" column="start" jdbcType="TIMESTAMP" javaType="org.joda.time.DateTime"/>
    <result property="end" column="end" jdbcType="TIMESTAMP" javaType="org.joda.time.DateTime"/>
  </resultMap>

  <cacheModel id="extDataMapCache" type="MEMORY" readOnly="false" serialize="true">
    <flushInterval hours="24"/>
    <property name="reference-type" value="SOFT"/>
  </cacheModel>



  <sql id="interactionsOrderColumns">
    <isEqual property="searchBO.order[].field" compareValue="COUPLE_ID">couple_id</isEqual>
    <isEqual property="searchBO.order[].field" compareValue="COUPLE_SID">couple_sid</isEqual>
    <isEqual property="searchBO.order[].field" compareValue="COUPLE_LENGTH">couple_length</isEqual>
    <isEqual property="searchBO.order[].field" compareValue="START_DATE">couple_start</isEqual>
    <isEqual property="searchBO.order[].field" compareValue="SCORE">subeval_score</isEqual>
    <isEqual property="searchBO.order[].field" compareValue="EVALUATION_ID">evaluation_id</isEqual>
    <isEqual property="searchBO.order[].field" compareValue="SCORING_SYSTEM">quest_sc_system</isEqual>
  </sql>

  <sql id="interactionsWhereFragment">
    where couples.problemstatus = 'NO_PROBLEM'

    <isNotEmpty property="allowedUsers">
      and (
      <iterate property="allowedUsers" open="callrec.couples.callingnr IN ( " close=") or"
                prepend=" " conjunction=", ">
        <isNotEmpty property="allowedUsers[].phone">
          #allowedUsers[].phone#
        </isNotEmpty>
      </iterate>

      <iterate property="allowedUsers" open="callrec.couples.originalcallednr IN (" close=") or"
               conjunction=", " prepend=" ">
        <isNotEmpty property="allowedUsers[].phone">
        #allowedUsers[].phone#
        </isNotEmpty>
      </iterate>
      <iterate property="allowedUsers" open="callrec.couples.callingagent IN (" close=") or"
               conjunction=", " prepend=" ">
        <isNotEmpty property="allowedUsers[].agentid">
        #allowedUsers[].agentid#
      </isNotEmpty>
      </iterate>

      <iterate property="allowedUsers" open="callrec.couples.calledagent IN (" close=") or"
                prepend=" " conjunction=", ">
        <isNotEmpty property="allowedUsers[].agentid">
        #allowedUsers[].agentid#
        </isNotEmpty>
      </iterate>
      false
      )
    </isNotEmpty>
    <isNotEmpty property="wantedSpeechTags">
      <iterate property="wantedSpeechTags" conjunction=" " prepend=" ">
        <isNotEmpty property="wantedSpeechTags[].phrases" >
        and VW$wantedSpeechTags[].tagid$.phraseid IN
        <iterate property="wantedSpeechTags[].phrases" open=" ( " close=" ) " conjunction=", " prepend=" ">
          #wantedSpeechTags[].phrases[].phraseid#
        </iterate>
        <isNotEmpty property="wantedSpeechTags[].confidenceRange" >
          and VW$wantedSpeechTags[].tagid$.confidence &gt; #wantedSpeechTags[].confidenceRange.min#
           and VW$wantedSpeechTags[].tagid$.confidence &lt;= #wantedSpeechTags[].confidenceRange.max#
          </isNotEmpty>
        </isNotEmpty>
      </iterate>
    </isNotEmpty>

    <isNotEmpty property="unWantedSpeechTags">
      <iterate property="unWantedSpeechTags" conjunction=" " prepend=" ">
        and not exists (SELECT 1 FROM callrec.voice_tags VT JOIN callrec.cfiles CF ON (VT.cfileid = CF.id)
                  JOIN callrec.couples CPL ON (CPL.id = CF.cplid) WHERE CPL.id=callrec.couples.id AND VT.phraseid IN
        <iterate property="unWantedSpeechTags[].phrases" open=" ( " close=" ) " conjunction=", " prepend=" ">
          #unWantedSpeechTags[].phrases[].phraseid#
        </iterate>
        <isNotEmpty property="unWantedSpeechTags[].confidenceRange" >
        and VT.confidence &gt; #unWantedSpeechTags[].confidenceRange.min#
        and VT.confidence &lt;= #unWantedSpeechTags[].confidenceRange.max#
        </isNotEmpty>
        )

      </iterate>
    </isNotEmpty>

    <isNotEmpty property="extDataSearch">
      <iterate property="extDataSearch.condition" conjunction=" " prepend="and">
        <isEqual property="extDataSearch.condition[].openBracket" compareValue="true">(</isEqual>
        <isEqual property="extDataSearch.condition[].comparator.caseInSensitive" compareValue="true">lower(
        </isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_1">FIXED.col_1</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_2">FIXED.col_2</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_3">FIXED.col_3</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_4">FIXED.col_4</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_5">FIXED.col_5</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_6">FIXED.col_6</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_7">FIXED.col_7</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_8">FIXED.col_8</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_9">FIXED.col_9</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_10">FIXED.col_10</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_11">FIXED.col_11</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_12">FIXED.col_12</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_13">FIXED.col_13</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_14">FIXED.col_14</isEqual>
        <isEqual property="extDataSearch.condition[].field" compareValue="EXTERNAL_COL_15">FIXED.col_15</isEqual>


        <isEqual property="extDataSearch.condition[].comparator.caseInSensitive" compareValue="true">)</isEqual>
        $extDataSearch.condition[].comparator.value$
        <isEqual property="extDataSearch.condition[].comparator.caseInSensitive" compareValue="true">lower(
        </isEqual>
        #extDataSearch.condition[].value#
        <isEqual property="extDataSearch.condition[].comparator.caseInSensitive" compareValue="true">)</isEqual>
        <isEqual property="extDataSearch.condition[].closeBracket" compareValue="true">)</isEqual>
        <isNotNull property="extDataSearch.condition[].operator">$extDataSearch.condition[].operator.value$
        </isNotNull>
      </iterate>
    </isNotEmpty>
    <isParameterPresent>
      <isNotEmpty property="searchBO">
        <iterate property="searchBO.condition" conjunction=" " prepend="and" removeFirstPrepend="true">
          <isEqual property="searchBO.condition[].openBracket" compareValue="true">(</isEqual>
          <isEqual property="searchBO.condition[].comparator.caseInSensitive" compareValue="true">lower(
          </isEqual>

          <!-- specific columns if you add new, change method allowedWhereColumns in InteractionsDao-->
          <isEqual property="searchBO.condition[].field" compareValue="SPEECH_TAG_ID">callrec.speech_tags.tagid</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="NAME">callrec.speech_tags.tag_name</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="SEARCH">callrec.speech_tags.searchid</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="ICON">callrec.speech_tags.icon</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="STATE">callrec.speech_tags.state</isEqual>

          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_ARCHIVED">couples.archived</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_B_LOCATION">couples.b_location</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_B_METHOD">couples.b_method</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_CALL_ID">couples.callid</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_CALLED_AGENT">couples.calledagent</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_CALLED_IP">couples.calledip</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_CALLED_PARTY_NAME">couples.calledpartyname</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_CALLING_AGENT">couples.callingagent</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_CALLING_IP">couples.callingip</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_CALLING_NR">couples.callingnr</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_CALLING_PARTY_NAME">couples.callingpartyname</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_CFCNT">couples.cfcnt</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_DAY_OF_WEEK">couples.dayofweek</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_DELETED">couples.deleted</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_DESCRIPTION">couples.description</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_FINAL_CALLED_NR">couples.finalcallednr</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_ID">couples.id</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_LENGTH">couples.length</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_MIXED">couples.mixed</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_ORIGINAL_CALLED_NR">couples.originalcallednr</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_PROBLEM_STATUS">couples.problemstatus</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_PROTECTED">couples.protected</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_RESTORED">couples.restored</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_SCORECARD_USE">couples.scorecard_use</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_SID">couples.sid</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_START_TS">couples.start_ts</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_STATE">couples.state</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_STOP_TS">couples.stop_ts</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_SYNCHRONIZED">couples.synchronized</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_TIME_OF_DAY">couples.timeofday</isEqual>
          <isEqual property="searchBO.condition[].field" compareValue="COUPLE_TYPE">couples.cpltype</isEqual>

          <isEqual property="searchBO.condition[].comparator.caseInSensitive" compareValue="true">)</isEqual>
          $searchBO.condition[].comparator.value$
          <isEqual property="searchBO.condition[].comparator.caseInSensitive" compareValue="true">lower(
          </isEqual>
          #searchBO.condition[].value#
          <isEqual property="searchBO.condition[].comparator.caseInSensitive" compareValue="true">)</isEqual>
          <isEqual property="searchBO.condition[].closeBracket" compareValue="true">)</isEqual>
          <isNotNull property="searchBO.condition[].operator">$searchBO.condition[].operator.value$
          </isNotNull>
        </iterate>
      </isNotEmpty>
    </isParameterPresent>
  </sql>

  <sql id="interactionsOrder">
    <iterate property="searchBO.order" conjunction=", " prepend="order by" removeFirstPrepend="true">
      <include refid="interactionsOrderColumns"/>
      $searchBO.order[].direction.value$
    </iterate>
  </sql>

  <sql id="interactionsColumns">
        callrec.couples.id as couple_id,
        callrec.couples.sid as couple_sid,
        callrec.couples.length as couple_length,
        callrec.couples.start_ts as couple_start,
        callrec.couples.stop_ts as couple_stop,
        callrec.couples.callingnr,
        callrec.couples.originalcallednr,
        callrec.couples.callingagent,
        callrec.couples.calledagent,
        callrec.couples.cftypes::integer as couple_cftypes,
        callrec.couples.direction as couple_direction,
        wbsc.subevaluation.sub_eval_total as subeval_score,
        wbsc.questforms.scoring_system as quest_sc_system,
        wbsc.evaluations.evaluationid as evaluation_id,
        callrec.cfiles.cfpath as cfile_cpath,
        callrec.cfiles.cftype as cfile_cftype,
        callrec.cfiles.cktype as cfile_cktype,
        callrec.cfiles.ckvalue as cfile_ckvalue,
        callrec.cfiles.id as cfile_id,
        callrec.cfiles.enc_key_id as cfile_enc_key,
        callrec.cfiles.digest as cfile_digest,

        callrec.speech_tags.tagid as tagid,
        callrec.speech_tags.tag_name as tag_name,
        callrec.speech_tags.icon as icon,
        callrec.speech_tags.searchid as searchid,
        callrec.speech_tags.state as state,

        callrec.speech_phrases.phrase_text as phrase_text,
        callrec.speech_phrases.state as speech_phrases_state,
        callrec.speech_phrases.enabled as enabled,
        callrec.speech_phrases.interaction_count as interaction_count,
        callrec.speech_phrases.last_count_date as last_count_date,

        callrec.voice_tags.voice_tagid as voice_tagid,
        callrec.voice_tags.phraseid as phraseid,
        callrec.voice_tags.from_time as from_time,
        callrec.voice_tags.to_time as to_time,
        callrec.voice_tags.confidence as confidence,
        callrec.voice_tags.channel as channel
    </sql>

  <sql id="interactionsJoinComplete">
    callrec.couples
    LEFT OUTER JOIN
    wbsc.evalcalls ON (callrec.couples.sid = wbsc.evalcalls.couplesid)
    JOIN
    callrec.cfiles ON (callrec.couples.id = callrec.cfiles.cplid)
    <isNotEmpty property="extDataSearch">
    JOIN
    callrec.couple_fixed_extdata FIXED ON (callrec.couples.id = FIXED.cplid)
    </isNotEmpty>
    LEFT OUTER JOIN
    callrec.voice_tags ON (callrec.voice_tags.cfileid = callrec.cfiles.id)
    LEFT OUTER JOIN
    callrec.speech_phrases ON (callrec.voice_tags.phraseid = callrec.speech_phrases.phraseid)
    LEFT OUTER JOIN
    callrec.tag_to_phrases ON (callrec.tag_to_phrases.phraseid = callrec.speech_phrases.phraseid)
    LEFT OUTER JOIN
    callrec.speech_tags ON (callrec.speech_tags.tagid = callrec.tag_to_phrases.tagid)
    LEFT OUTER JOIN
    wbsc.subevaluation ON (wbsc.evalcalls.subevaluationid = wbsc.subevaluation.subevaluationid)
    LEFT OUTER JOIN
    wbsc.criteria ON (wbsc.subevaluation.criteriaid = wbsc.criteria.criteriaid)
    LEFT OUTER JOIN
    wbsc.evaluations ON (wbsc.evaluations.evaluationid = wbsc.criteria.evaluationid)
    LEFT OUTER JOIN
    wbsc.questforms ON (wbsc.evaluations.qformid = wbsc.questforms.qformid)

    <isNotEmpty property="wantedSpeechTags">
      <iterate property="wantedSpeechTags" conjunction=" " prepend=" ">
        JOIN callrec.voice_tags VW$wantedSpeechTags[].tagid$ ON (VW$wantedSpeechTags[].tagid$.cfileid =
        callrec.cfiles.id)
      </iterate>
    </isNotEmpty>
  </sql>

  <sql id="interactionsJoin">
    callrec.couples
    JOIN    callrec.cfiles ON (callrec.couples.id = callrec.cfiles.cplid)
    <isNotEmpty property="extDataSearch">
    JOIN    callrec.couple_fixed_extdata FIXED ON (callrec.couples.id = FIXED.cplid)
    </isNotEmpty>
    <isNotEmpty property="wantedSpeechTags">
      <iterate property="wantedSpeechTags" conjunction=" " prepend=" ">
        JOIN callrec.voice_tags VW$wantedSpeechTags[].tagid$ ON (VW$wantedSpeechTags[].tagid$.cfileid =
        callrec.cfiles.id)
      </iterate>
    </isNotEmpty>
  </sql>



  <select id="interactionsSelectByFilter" parameterClass="java.util.HashMap" resultMap="interactionsLimitedMap">
    SELECT
    JUSTCOUPLES.*,
    wbsc.subevaluation.sub_eval_total as subeval_score,
    wbsc.questforms.scoring_system as quest_sc_system,
    wbsc.evaluations.evaluationid as evaluation_id,
    callrec.voice_tags.voice_tagid as voice_tagid,
    callrec.voice_tags.phraseid as phraseid,
    callrec.voice_tags.from_time as from_time,
    callrec.voice_tags.to_time as to_time,
    callrec.voice_tags.confidence as confidence,
    callrec.voice_tags.channel as channel
    from (
          SELECT
          callrec.couples.id as couple_id,
          callrec.couples.sid as couple_sid,
          callrec.couples.length as couple_length,
          callrec.couples.start_ts as couple_start,
          callrec.couples.stop_ts as couple_stop,
          callrec.couples.callingnr,
          callrec.couples.originalcallednr,
          callrec.couples.callingagent,
          callrec.couples.calledagent,
          callrec.couples.cftypes::integer as couple_cftypes,
          callrec.couples.direction as couple_direction,
          callrec.cfiles.id as cfile_id
          FROM
          <include refid="interactionsJoin"/>
          <include refid="interactionsWhereFragment"/>
          <isNotEmpty property="searchBO.order">
            <include refid="interactionsOrder"/>
          </isNotEmpty>
          <include refid="pagingFragment"/>
    ) JUSTCOUPLES
    LEFT OUTER JOIN wbsc.evalcalls ON (JUSTCOUPLES.couple_sid = wbsc.evalcalls.couplesid)
    LEFT OUTER JOIN callrec.voice_tags ON (callrec.voice_tags.cfileid =  JUSTCOUPLES.cfile_id)
    LEFT OUTER JOIN wbsc.subevaluation ON (wbsc.evalcalls.subevaluationid = wbsc.subevaluation.subevaluationid)
    LEFT OUTER JOIN wbsc.criteria ON (wbsc.subevaluation.criteriaid = wbsc.criteria.criteriaid)
    LEFT OUTER JOIN wbsc.evaluations ON (wbsc.evaluations.evaluationid = wbsc.criteria.evaluationid)
    LEFT OUTER JOIN wbsc.questforms ON (wbsc.evaluations.qformid = wbsc.questforms.qformid)
    <isNotEmpty property="searchBO.order">
      <include refid="interactionsOrder"/>
    </isNotEmpty>
  </select>
  <!--QM API-->
  <select id="interactionsSelectByFilterFull" parameterClass="java.util.HashMap" resultMap="interactionsMap">
    SELECT
    <include refid="interactionsColumns"/>
    FROM
    <include refid="interactionsJoinComplete"/>
    <include refid="interactionsWhereFragment"/>

    <isNotEmpty property="searchBO.order">
      <include refid="interactionsOrder"/>
    </isNotEmpty>
    <include refid="pagingFragment"/>
  </select>
  <!--QM API-->
  <select id="interactionsRelatedSelect" parameterClass="java.util.HashMap" resultMap="interactionsMap">
    SELECT
    <include refid="interactionsColumns"/>
    FROM
    <include refid="interactionsJoinComplete"/>
    WHERE callrec.couples.callid = (select callid from callrec.couples where <include refid="coupleFullWhereFragment"/>)

    <isNotEmpty property="searchBO.order">
      <include refid="interactionsOrder"/>
    </isNotEmpty>
    <include refid="pagingFragment"/>
  </select>

  <select id="interactionsCountByFilter" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
    SELECT COUNT(1) FROM (
    SELECT distinct callrec.couples.id
    FROM
    <include refid="interactionsJoin"/>
    <include refid="interactionsWhereFragment"/>
    <isNotNull property="searchBO.limit">limit #searchBO.limit#</isNotNull>
    ) subselect
  </select>

    <select id="existingCouplesFromTrainingInProgressForUser" resultClass="java.lang.String" parameterClass="java.util.Map">
        SELECT calls.couplesid
        FROM wbsc.evaluations eval
        JOIN wbsc.questforms quest ON (eval.qformid = quest.qformid)
        JOIN wbsc.criteria criteria ON (eval.evaluationid = criteria.evaluationid)
        JOIN wbsc.subevaluation subeval ON (criteria.criteriaid = subeval.criteriaid)
        JOIN wbsc.evalcalls calls ON (subeval.subevaluationid = calls.subevaluationid)
        WHERE eval.evalstatus
            <iterate open=" in (" close=")" conjunction="," property="evaluationStatuses">
                #evaluationStatuses[]#
            </iterate>
            AND eval.evaluated_user = #evaluatedUser#
            AND quest.qftype = 'TRAINING'
            AND calls.couplesid
              <iterate open=" in (" close=")" conjunction="," property="coupleSids">
                #coupleSids[]#
              </iterate>
    </select>

<!--===============================================================================================================================  -->
  <!-- all below not used maybe needed in future -->

  <select id="interactionExtraDataSelect" parameterClass="java.util.List" resultMap="InteractionExtraDataTOResultMap">
      SELECT
      wbsc.evalcalls.couplesid,
      wbsc.subevaluation.sub_eval_total,
      wbsc.questforms.scoring_system
      FROM
      wbsc.evalcalls,
      wbsc.subevaluation,
      wbsc.questforms,
      wbsc.criteria,
      wbsc.evaluations
      WHERE
      <iterate close=")" conjunction=", " open="wbsc.evalcalls.couplesid in (" prepend=" ">
        #[]#
      </iterate>
      AND wbsc.evalcalls.subevaluationid = wbsc.subevaluation.subevaluationid AND wbsc.subevaluation.criteriaid =
      wbsc.criteria.criteriaid
      AND wbsc.criteria.evaluationid = wbsc.evaluations.evaluationid AND wbsc.evaluations.qformid =
      wbsc.questforms.qformid
      ORDER BY
      wbsc.evalcalls.couplesid
  </select>

  <select id="getCallsInterval" resultMap="intervalResultMap">
    select
      min(start_ts) as "start",
      max(start_ts) as "end"
    from callrec.calls
  </select>
</sqlMap>
