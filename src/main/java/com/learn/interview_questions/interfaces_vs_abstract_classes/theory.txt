Abstract class:
- can have none-abstract methods;
- can have static fields;
- can have instance variables;
- can be extended
- you can extend just one abstract (or usual) class

Interfaces:
- can't have instance variables, members are public static final by default
- can't have constructor
- can't have static variables
- have only abstract methods
- you can implement as many interfaces as you need

Interfaces may have default methods (for backward compatibility they were added) which don't have access to instance state
as interfaces have not state (instance variables, methods).
Default methods are needed for having backwards compatibility. New methods were added to `List` JDK interface
and we don't clients to make changes in all implementors of that interface.